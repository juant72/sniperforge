warning: unused import: `read_keypair_file`
 --> setup_mainnet_wallet.rs:5:26
  |
5 |     signature::{Keypair, read_keypair_file},
  |                          ^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `token_b_decimals`
   --> phase4b_jupiter_scanner.rs:167:5
    |
167 |     token_b_decimals: f64,
    |     ^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_token_b_decimals`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `total_needed`
  --> phase2c_real_arbitrage.rs:93:9
   |
93 |     let total_needed = arbitrage_amount + rent_exempt + 5_000_000; // Extra para fees
   |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_total_needed`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `initial_balance_lamports`
   --> phase2c_real_arbitrage.rs:101:9
    |
101 |     let initial_balance_lamports = client.get_balance(&user_pubkey)?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_initial_balance_lamports`

    Checking sniperforge v0.1.0 (C:\work\encrypia\labs\sniperforge)
warning: unused import: `json`
 --> phase4_jupiter_mainnet_real.rs:3:18
  |
3 | use serde_json::{json, Value};
  |                  ^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::str::FromStr`
  --> phase4_jupiter_mainnet_real.rs:10:5
   |
10 | use std::str::FromStr;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `Instant`
  --> phase4_jupiter_mainnet_real.rs:11:27
   |
11 | use std::time::{Duration, Instant};
   |                           ^^^^^^^

warning: unused variable: `user_pubkey`
   --> phase4_jupiter_mainnet_real.rs:129:5
    |
129 |     user_pubkey: &Pubkey,
    |     ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_pubkey`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: fields `amount_sol`, `route_1_output`, `route_2_output`, `route_1_data`, and `route_2_data` are never read
   --> phase4_jupiter_mainnet_real.rs:118:5
    |
117 | struct ArbitrageOpportunity {
    |        -------------------- fields in this struct
118 |     amount_sol: f64,
    |     ^^^^^^^^^^
119 |     route_1_output: f64, // SOL ÔåÆ USDC amount
    |     ^^^^^^^^^^^^^^
120 |     route_2_output: f64, // USDC ÔåÆ SOL amount
    |     ^^^^^^^^^^^^^^
...
124 |     route_1_data: Value,
    |     ^^^^^^^^^^^^
125 |     route_2_data: Value,
    |     ^^^^^^^^^^^^
    |
    = note: `ArbitrageOpportunity` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
    = note: `#[warn(dead_code)]` on by default

warning: unused variable: `network`
    --> src\cli.rs:2435:5
     |
2435 |     network: &str,
     |     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_network`
     |
     = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `adjusted_final_amount`
    --> src\cli.rs:2489:9
     |
2489 |     let adjusted_final_amount = sol_amount + profit_lamports;
     |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_adjusted_final_amount`

warning: unused variable: `wallet`
    --> src\cli.rs:3069:35
     |
3069 | async fn execute_single_arbitrage(wallet: Keypair, amount: f64) -> Result<()> {
     |                                   ^^^^^^ help: if this is intentional, prefix it with an underscore: `_wallet`

warning: unused import: `Signature`
 --> phase3b_mainnet_scaled.rs:7:26
  |
7 |     signature::{Keypair, Signature},
  |                          ^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `Ordering`
 --> src\bin\benchmark_proposal_003.rs:8:36
  |
8 | use std::sync::atomic::{AtomicU64, Ordering};
  |                                    ^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused variable: `metrics`
  --> src\bin\benchmark_proposal_003.rs:80:9
   |
80 |     let metrics = Arc::new(BenchmarkMetrics::new());
   |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_metrics`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: fields `startup_time`, `peak_memory`, `opportunities_found`, `api_calls_made`, and `errors_encountered` are never read
  --> src\bin\benchmark_proposal_003.rs:25:5
   |
24 | struct BenchmarkMetrics {
   |        ---------------- fields in this struct
25 |     startup_time: Duration,
   |     ^^^^^^^^^^^^
26 |     peak_memory: AtomicU64,
   |     ^^^^^^^^^^^
27 |     opportunities_found: AtomicU64,
   |     ^^^^^^^^^^^^^^^^^^^
28 |     api_calls_made: AtomicU64,
   |     ^^^^^^^^^^^^^^
29 |     errors_encountered: AtomicU64,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = note: `BenchmarkMetrics` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis
   = note: `#[warn(dead_code)]` on by default

warning: unused import: `Signature`
 --> phase3_mainnet_2c_direct.rs:7:26
  |
7 |     signature::{Keypair, Signature},
  |                          ^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `sniperforge` (bin "setup_mainnet_wallet") generated 1 warning (run `cargo fix --bin "setup_mainnet_wallet"` to apply 1 suggestion)
warning: `sniperforge` (bin "phase4b_jupiter_scanner") generated 1 warning
warning: `sniperforge` (bin "phase2c_real_arbitrage") generated 2 warnings
warning: `sniperforge` (bin "phase4_jupiter_mainnet_real") generated 5 warnings (run `cargo fix --bin "phase4_jupiter_mainnet_real"` to apply 3 suggestions)
warning: `sniperforge` (bin "sniperforge") generated 3 warnings
warning: `sniperforge` (bin "phase3b_mainnet_scaled") generated 1 warning (run `cargo fix --bin "phase3b_mainnet_scaled"` to apply 1 suggestion)
warning: `sniperforge` (bin "benchmark_proposal_003") generated 3 warnings (run `cargo fix --bin "benchmark_proposal_003"` to apply 1 suggestion)
warning: `sniperforge` (bin "phase3_mainnet_2c_direct") generated 1 warning (run `cargo fix --bin "phase3_mainnet_2c_direct"` to apply 1 suggestion)
error: unexpected closing delimiter: `}`
  --> src\bin\test_saber_quick.rs:87:1
   |
24 |     if response.status().is_success() {
   |                                       - this delimiter might not be properly closed...
...
79 |         } else {
   |         - ...as it matches this but it has different indentation
...
87 | }
   | ^ unexpected closing delimiter

error: could not compile `sniperforge` (bin "test_saber_quick") due to 1 previous error
warning: build failed, waiting for other jobs to finish...
error[E0583]: file not found for module `saber_integration`
  --> arbitrage_bot.rs:43:1
   |
43 | mod saber_integration;
   | ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: to create the module `saber_integration`, create file "saber_integration.rs" or "saber_integration\mod.rs"
   = note: if there is a `mod saber_integration` elsewhere in the crate already, import it with `use crate::...` instead

warning: unused import: `SafeTester`
  --> modules\mod.rs:10:24
   |
10 | pub use safe_testing::{SafeTester, RiskLevel, execute_safe_arbitrage_test};
   |                        ^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `JupiterScanner`
  --> modules\mod.rs:11:27
   |
11 | pub use jupiter_scanner::{JupiterScanner, Priority, execute_comprehensive_scan, execute_quick_scan};
   |                           ^^^^^^^^^^^^^^

warning: unused import: `AutomatedMonitor`
  --> modules\mod.rs:12:29
   |
12 | pub use automated_monitor::{AutomatedMonitor, MonitorConfig, start_automated_monitoring_with_config};
   |                             ^^^^^^^^^^^^^^^^

warning: unused imports: `RealExecutor` and `create_mainnet_executor`
  --> modules\mod.rs:13:26
   |
13 | pub use real_execution::{RealExecutor, create_mainnet_executor, simulate_arbitrage_execution};
   |                          ^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^

For more information about this error, try `rustc --explain E0583`.
warning: `sniperforge` (bin "arbitrage_bot") generated 4 warnings
error: could not compile `sniperforge` (bin "arbitrage_bot") due to 1 previous error; 4 warnings emitted
