[package]
name = "sniperforge"
version = "0.1.0"
edition = "2021"

# OPTIMIZACI√ìN BUILD: Configuraci√≥n para compilaci√≥n s√∫per r√°pida
[profile.dev]
opt-level = 0        # Sin optimizaci√≥n en dev
debug = true         # Debug info
incremental = true   # Compilaci√≥n incremental CR√çTICO
codegen-units = 256  # M√°ximo paralelismo

[profile.dev.package."*"]
opt-level = 0        # Sin optimizaci√≥n para dependencias
debug = false        # Sin debug para deps = M√ÅS R√ÅPIDO

[profile.release]
opt-level = 3
lto = "thin"         # LTO m√°s r√°pido que "fat"
codegen-units = 1
panic = "abort"

# üéØ SISTEMA PRINCIPAL MODULAR
[[bin]]
name = "arbitrage_bot"
path = "arbitrage_bot.rs"

# üöÄ INTEGRATED SYSTEM - ALL PHASES 1-4
[[bin]]
name = "main_integrated"
path = "src/bin/main_integrated.rs"

# üèÜ EXPERT DEFI ARBITRAGE SYSTEM
[[bin]]
name = "real_arbitrage_expert"
path = "real_arbitrage_expert.rs"

# üß™ TEST EXPERT SYSTEM
[[bin]]
name = "test_expert_system"
path = "test_expert_system.rs"

# üß™ SCRIPT DE PRUEBA DEL SISTEMA CORREGIDO
[[bin]]
name = "test_system"
path = "test_system.rs"

# ÔøΩ PRUEBA ESPEC√çFICA OPCIONES 4-8 
[[bin]]
name = "test_options_4_8"
path = "test_options_4_8.rs"

# üîç DEBUG TOOLS
[[bin]]
name = "debug_fees"
path = "debug_fees.rs"

# ÔøΩüìã BINARIOS ESENCIALES ACTIVOS
[[bin]]
name = "safe_arbitrage_test"
path = "safe_arbitrage_test.rs"

[[bin]]
name = "phase2c_real_arbitrage"
path = "phase2c_real_arbitrage.rs"

[[bin]]
name = "phase2f_hybrid_final"
path = "phase2f_hybrid_final.rs"

[[bin]]
name = "phase3_mainnet_2c_direct"
path = "phase3_mainnet_2c_direct.rs"

[[bin]]
name = "phase3b_mainnet_scaled"
path = "phase3b_mainnet_scaled.rs"

[[bin]]
name = "phase3d_mainnet_optimal"
path = "phase3d_mainnet_optimal.rs"

[[bin]]
name = "phase4_jupiter_mainnet_real"
path = "phase4_jupiter_mainnet_real.rs"

[[bin]]
name = "phase4b_jupiter_scanner"
path = "phase4b_jupiter_scanner.rs"

[[bin]]
name = "setup_mainnet_wallet"
path = "setup_mainnet_wallet.rs"

# ===== PHASE 1: JUPITER ADVANCED TESTING =====
[[bin]]
name = "test_phase1_jupiter_advanced"
path = "test_phase1_jupiter_advanced.rs"

[[bin]]
name = "test_phase1_advanced_complete"
path = "test_phase1_advanced_complete.rs"

[[bin]]
name = "test_phase1_simple"
path = "test_phase1_simple.rs"

# ===== PHASE 2: MEV PROTECTION TESTING =====
[[bin]]
name = "test_phase2_mev_protection"
path = "test_phase2_mev_protection.rs"

[[bin]]
name = "test_phase2_simple"
path = "test_phase2_simple.rs"

[[bin]]
name = "test_phase2_mev_protection_fixed"
path = "test_phase2_mev_protection_fixed.rs"

# ===== PHASE 3: DEX SPECIALIZATION TESTING =====
[[bin]]
name = "test_phase3_dex_specialization"
path = "test_phase3_dex_specialization.rs"

# ===== INTEGRATED SYSTEM TESTING =====
[[bin]]
name = "test_integrated_system"
path = "test_integrated_system.rs"

# ===== COMPLETE SYSTEM TESTING =====
[[bin]]
name = "test_complete_system"
path = "test_complete_system.rs"

# ===== COMPLETE SYSTEM SIMPLIFIED TESTING =====
[[bin]]
name = "test_complete_system_simplified"
path = "test_complete_system_simplified.rs"

# ===== QUICK COMPLETE SYSTEM TESTING =====
[[bin]]
name = "test_quick_complete"
path = "test_quick_complete.rs"

# Force no OpenSSL dependencies
[features]
default = []
native-tls = []

[lib]
name = "sniperforge"
path = "src/lib.rs"

[dependencies]
# Async runtime - features m√≠nimas pero funcionales
tokio = { version = "1.0", default-features = false, features = ["rt-multi-thread", "macros", "net", "time", "io-util"] }
tokio-tungstenite = { version = "0.27.0", default-features = false, features = ["connect", "rustls-tls-webpki-roots"] }
futures-util = { version = "0.3", default-features = false, features = ["std"] }
futures = { version = "0.3", default-features = false, features = ["std"] }

# Solana (exact versions known to work together for mainnet trading)
solana-sdk = { version = "=2.2.1", default-features = false, features = ["full"] }
solana-client = { version = "=2.2.1", default-features = false, features = [] }
solana-account-decoder = { version = "=2.2.1", default-features = false, features = [] }
solana-transaction-status = { version = "=2.2.1", default-features = false, features = [] }
spl-token = { version = "=6.0.0", default-features = false }
spl-associated-token-account = { version = "=4.0.0", default-features = false }

# Random number generation for dynamic data
rand = { version = "0.8", default-features = false, features = ["std", "std_rng"] }

# Serde for serialization - minimal pero funcional
serde = { version = "1.0", default-features = false, features = ["derive", "std"] }
serde_json = { version = "1.0", default-features = false, features = ["std"] }
toml = { version = "0.8", default-features = false, features = ["display", "parse"] }
dotenv = "0.15"
bincode = { version = "1.3", default-features = false }

# Logging and error handling
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
env_logger = "0.10"
log = "0.4"
anyhow = "1.0"
chrono = { version = "0.4", features = ["serde"] }

# Web3 and crypto - compatible versions with Solana 2.2.1
# anchor-client = { version = "0.30.1", default-features = false }
# anchor-lang = { version = "0.30.1", default-features = false }

# Orca Whirlpool SDK
orca_whirlpools = { version = "3.1.0", default-features = false }

# Phoenix DEX - Use RPC calls instead of SDK for compatibility
# phoenix-sdk = { git = "https://github.com/Ellipsis-Labs/phoenix-sdk", branch = "master", features = ["rust"] }
# ellipsis-client = { git = "https://github.com/Ellipsis-Labs/phoenix-sdk", branch = "master" }

# HTTP client for Jupiter API calls and base64 encoding for mainnet
reqwest = { version = "0.12.20", default-features = false, features = ["json", "rustls-tls"] }
base64 = { version = "0.22", default-features = false, features = ["std"] }
bs58 = { version = "0.5", default-features = false }
bip39 = { version = "2.0", default-features = false, features = ["std"] }

# Additional dependencies for modular arbitrage system
uuid = { version = "1.0", features = ["v4", "serde"] }
once_cell = "1.20"
hex = { version = "0.4", default-features = false }
url = "2.4"
urlencoding = "2.1"

# TLS/SSL support
rustls = { version = "0.23", features = ["ring"] }

# OpenSSL precompilado - descomenta para usar binarios precompilados
openssl = { version = "0.10", features = ["vendored"] }
openssl-sys = { version = "0.9", features = ["vendored"] }

# Additional dependencies for trading engine
async-trait = "0.1"

# Logging ultra-minimal pero funcional - already defined above
# tracing = { version = "0.1", default-features = false, features = ["std"] }
# tracing-subscriber = { version = "0.3.19", default-features = false, features = ["env-filter", "std"] }
tracing-appender = { version = "0.2", default-features = false }

# CLI ultra-minimal pero con features necesarias para Windows
clap = { version = "4.0", default-features = false, features = ["derive", "std"] }
console = { version = "0.15", default-features = false }
colored = { version = "3.0.0", default-features = false }
crossterm = { version = "0.29.0", default-features = false, features = ["windows"] }

# Utilities - already defined above
# anyhow = "1.0"
thiserror = "1.0"
# chrono = { version = "0.4", features = ["serde"] } # already defined above

# Configuration
config = "0.15.11"

# Machine Learning & Data Science (Phase 6B)
candle-core = "0.8.0"
candle-nn = "0.8.0"
ndarray = "0.16.1"
ndarray-stats = "0.6.0"
linfa = "0.7.0"
linfa-clustering = "0.7.0"
polars = { version = "0.45.1", features = ["lazy", "temporal", "strings"] }
plotters = "0.3.7"
smartcore = "0.3.2"

# Metrics and monitoring
metrics = "0.24.2"
metrics-exporter-prometheus = "0.17.0"
sysinfo = "0.35.2"

# Temporary files for ML model storage
tempfile = "3.8"
ureq = { version = "3.0.12", features = ["json"] }

[dev-dependencies]
assert_matches = "1.5"
mockall = "0.13.1"

# PROFILES ELIMINADOS - YA EST√ÅN EN LA PARTE SUPERIOR
# (duplicados removidos para evitar errores de compilaci√≥n)
