#!/usr/bin/env pwsh
# Preparaci√≥n completa para testing del ArbitrageBot en DevNet

Write-Host "üöÄ Preparando entorno DevNet para ArbitrageBot" -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Cyan

# 1. Verificar configuraci√≥n
Write-Host "üìã Paso 1: Verificando configuraci√≥n..." -ForegroundColor Yellow
if (Test-Path "config/devnet.toml") {
    Write-Host "‚úÖ Configuraci√≥n DevNet encontrada" -ForegroundColor Green
} else {
    Write-Host "‚ùå Configuraci√≥n DevNet no encontrada" -ForegroundColor Red
    exit 1
}

# 2. Verificar wallet de testing
Write-Host "üí≥ Paso 2: Verificando wallet de testing..." -ForegroundColor Yellow
if (Test-Path "test-wallet.json") {
    Write-Host "‚úÖ Wallet de testing encontrado" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Wallet de testing no encontrado. Creando..." -ForegroundColor Yellow
    cargo run --bin create_test_wallet
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Wallet de testing creado" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Error creando wallet de testing" -ForegroundColor Red
        exit 1
    }
}

# 3. Verificar balance de SOL en DevNet
Write-Host "üí∞ Paso 3: Verificando balance DevNet..." -ForegroundColor Yellow
cargo run --bin check_wallet_balance
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ö†Ô∏è  Solicitando airdrop de DevNet..." -ForegroundColor Yellow
    cargo run --bin request_devnet_airdrop
    Start-Sleep -Seconds 5
    cargo run --bin check_wallet_balance
}

# 4. Compilar el proyecto
Write-Host "üî® Paso 4: Compilando proyecto..." -ForegroundColor Yellow
cargo check --lib
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Error de compilaci√≥n" -ForegroundColor Red
    exit 1
}
Write-Host "‚úÖ Compilaci√≥n exitosa" -ForegroundColor Green

# 5. Verificar conectividad DevNet
Write-Host "üåê Paso 5: Verificando conectividad DevNet..." -ForegroundColor Yellow
cargo run --bin test_basic_connectivity
if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå Error de conectividad DevNet" -ForegroundColor Red
    exit 1
}

Write-Host "üéâ Preparaci√≥n completa! Listo para testing" -ForegroundColor Green
Write-Host "
üìã COMANDOS DE TESTING:
   cargo run --bin test_arbitrage_devnet        # Test completo del ArbitrageBot
   cargo run -- start --bot arbitrage --network devnet  # Iniciar bot via CLI

‚ö†Ô∏è  IMPORTANTE:
   - Usa DevNet solamente (sin riesgo financiero)
   - El bot usar√° cantidades peque√±as para testing
   - Monitorea los logs para verificar funcionamiento

üîç MONITOREO:
   - Verifica precios obtenidos de Jupiter API
   - Observa detecci√≥n de oportunidades
   - Confirma que no hay errores de conectividad
" -ForegroundColor Cyan
