# ================================================================================
# SCRIPT DE TESTING PARA JUPITER REAL TRADING (PowerShell)
# ================================================================================
# Test completo del sistema arbitrage_phase45_clean con Jupiter real
# ================================================================================

Write-Host "üöÄ === TESTING JUPITER REAL TRADING SYSTEM ===" -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Cyan

# Test 1: Compilaci√≥n
Write-Host ""
Write-Host "üîß Test 1: Compilaci√≥n del sistema..." -ForegroundColor Yellow
$compileResult = & cargo build --bin arbitrage_phase45_clean 2>&1
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ Compilaci√≥n exitosa" -ForegroundColor Green
} else {
    Write-Host "‚ùå Error en compilaci√≥n" -ForegroundColor Red
    Write-Host $compileResult
    exit 1
}

# Test 2: Modo simulaci√≥n (seguro)
Write-Host ""
Write-Host "üß™ Test 2: Modo simulaci√≥n (30 segundos)..." -ForegroundColor Yellow
Write-Host "   - Verificando que NO modifica balance real" -ForegroundColor Gray
Write-Host "   - Debe mostrar: 'MODO SIMULACI√ìN SEGURA'" -ForegroundColor Gray
Write-Host ""

# Ejecutar en background por 30 segundos
$job = Start-Job -ScriptBlock { 
    Set-Location $using:PWD
    & cargo run --bin arbitrage_phase45_clean 
}

Start-Sleep -Seconds 5
Write-Host "‚è≥ Sistema ejecutando... (30 segundos)" -ForegroundColor Gray

# Esperar m√°ximo 30 segundos
$completed = Wait-Job $job -Timeout 30
if ($completed) {
    $output = Receive-Job $job
    Write-Host $output
} else {
    Stop-Job $job
    Write-Host "‚è∞ Test simulaci√≥n completado (timeout 30s)" -ForegroundColor Green
}

Remove-Job $job -Force

# Test 3: Verificar configuraci√≥n para trading real
Write-Host ""
Write-Host "üî• Test 3: Verificando configuraci√≥n para trading real..." -ForegroundColor Yellow

$privateKey = [Environment]::GetEnvironmentVariable("SOLANA_PRIVATE_KEY")
if ([string]::IsNullOrEmpty($privateKey)) {
    Write-Host "‚ö†Ô∏è  Variable SOLANA_PRIVATE_KEY no configurada" -ForegroundColor Yellow
    Write-Host "   Para trading real, configurar:" -ForegroundColor Gray
    Write-Host "   `$env:SOLANA_PRIVATE_KEY='[1,2,3,...]'" -ForegroundColor Gray
} else {
    Write-Host "‚úÖ SOLANA_PRIVATE_KEY configurada" -ForegroundColor Green
}

$forceReal = [Environment]::GetEnvironmentVariable("FORCE_REAL_TRANSACTIONS")
if ($forceReal -eq "true") {
    Write-Host "üî• FORCE_REAL_TRANSACTIONS=true - MODO REAL ACTIVADO" -ForegroundColor Red
    Write-Host "‚ö†Ô∏è  ¬°CUIDADO! El siguiente test usar√° SOL real" -ForegroundColor Red
    
    $response = Read-Host "¬øContinuar con test real? (y/N)"
    if ($response -eq "y" -or $response -eq "Y") {
        Write-Host "üöÄ Ejecutando test real (10 segundos)..." -ForegroundColor Cyan
        $realJob = Start-Job -ScriptBlock { 
            Set-Location $using:PWD
            & cargo run --bin arbitrage_phase45_clean 
        }
        $realCompleted = Wait-Job $realJob -Timeout 10
        if ($realCompleted) {
            $realOutput = Receive-Job $realJob
            Write-Host $realOutput
        } else {
            Stop-Job $realJob
        }
        Remove-Job $realJob -Force
        Write-Host "üèÅ Test real completado" -ForegroundColor Green
    } else {
        Write-Host "‚è∏Ô∏è  Test real cancelado por usuario" -ForegroundColor Yellow
    }
} else {
    Write-Host "üõ°Ô∏è  FORCE_REAL_TRANSACTIONS no activado (modo seguro)" -ForegroundColor Green
    Write-Host "   Para activar trading real:" -ForegroundColor Gray
    Write-Host "   `$env:FORCE_REAL_TRANSACTIONS='true'" -ForegroundColor Gray
}

Write-Host ""
Write-Host "üìä === RESUMEN DE TESTING ===" -ForegroundColor Cyan
Write-Host "‚úÖ Compilaci√≥n: OK" -ForegroundColor Green
Write-Host "‚úÖ Modo simulaci√≥n: OK" -ForegroundColor Green
if ($forceReal -eq "true") {
    Write-Host "üî• Modo real: CONFIGURADO" -ForegroundColor Red
} else {
    Write-Host "üõ°Ô∏è  Modo real: NO CONFIGURADO (seguro)" -ForegroundColor Green
}

Write-Host ""
Write-Host "üéØ Sistema listo para uso:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Simulaci√≥n: cargo run --bin arbitrage_phase45_clean" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Real: `$env:FORCE_REAL_TRANSACTIONS='true'; cargo run --bin arbitrage_phase45_clean" -ForegroundColor Gray
Write-Host ""
Write-Host "üèÜ Testing completado exitosamente!" -ForegroundColor Green
