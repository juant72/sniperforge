# Rust
/target/
**/*.rs.bk
*.pdb
Cargo.lock

# IDE / Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.exe
*.dll
*.msi
*.pdb

# macOS
.AppleDouble
.LSOverride

# Linux
*~

# Logs
*.log
logs/
*.logs

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node_modules (if any JS tooling is added)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test
.env.local
.env.production

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Rust-specific
Cargo.lock

# RustRover
.idea

# Generated by Cargo
# Will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Project-specific patterns
# Configuration files with sensitive data
config/secrets.toml
config/private.toml
*.secret
*.private

# Database files
*.db
*.sqlite
*.sqlite3

# Cache directories
.cache/
cache/

# Build artifacts
build/
dist/
out/

# Test artifacts
test-results/
coverage/

# Documentation build
docs/_build/
docs/site/

# Backup files
*.bak
*.backup
*.orig

# Rust Analyzer files
.rust-analyzer-metadata.json

# Local development files
.local/
local/

# Environment-specific configs
.env.local
.env.development
.env.test
.env.production

# Profiling
*.prof
*.profile

# Benchmarking
bench-results/

# Generated documentation
doc/

# Solana keypairs and sensitive files
*.json
!package.json
!tsconfig.json
!Cargo.json
!rust-toolchain.json
keypairs/
wallets/
*.key

# Trading bot specific
trades/
positions/
wallet-history/
*.wallet

# Performance monitoring
perf.data*

# Memory dumps
*.dmp

# Core dumps
core.*

# JetBrains IDEs
.idea/
*.iml
*.ipr
*.iws

# Eclipse
.project
.metadata
# NOTA: NO ignorar src/bin/ porque contiene c√≥digo fuente de Rust binarios
# bin/ <- REMOVIDO porque src/bin/ debe estar tracked
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommendpath

# NetBeans
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# Vim
*.swp
*.swo
Session.vim
.netrwhist
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

# Atom
.atom/

# Python (if any Python scripts are added)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/
env.bak/
venv.bak/

# Docker
.dockerignore
docker-compose.override.yml
